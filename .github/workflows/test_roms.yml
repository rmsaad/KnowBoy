name: Execute Test ROMs
on:
  workflow_dispatch:

jobs:

  build:
    runs-on: [self-hosted, Linux]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache cmake build folder
        uses: actions/cache@v4
        with:
          path: ./platform/sdl/build
          key: ${{ env.cache-name }}-${{ hashFiles('**/CMakeLists.txt', 'cmake/**', '**/build_dependencies.cmake') }}

      - name: CMake Configure (Release)
        run: cmake -B ./platform/sdl/build ./platform/sdl -DCMAKE_BUILD_TYPE=Release
      
      - name: Build with Make (Release)
        working-directory: ./platform/sdl/build
        run: make

      - name: Download and Extract Test ROMs
        run: |
          curl -L https://github.com/c-sp/gameboy-test-roms/releases/download/v7.0/game-boy-test-roms-v7.0.zip -o test-roms.zip
          unzip -o test-roms.zip -d ./platform/sdl/build/test-roms

  run-test-roms:
    needs: build
    runs-on: [self-hosted, Linux]

    strategy:
      matrix:
        include:
          - test_rom: "blargg/cpu_instrs/cpu_instrs.gb"
            pass_criteria: "Passed all tests"
            success_message: "Passed all CPU instruction tests"

          - test_rom: "blargg/mem_timing/mem_timing.gb"
            pass_criteria: "Passed all tests"
            success_message: "Passed all memory timing tests"

          - test_rom: "blargg/instr_timing/instr_timing.gb"
            pass_criteria: "Passed"
            success_message: "Passed CPU instruction timing test"

    steps:
      - name: Run Knowboy with Test ROM
        working-directory: ./platform/sdl/build
        run: |
          timeout 60 bash -c \
          '
          stdbuf -oL -eL ./Knowboy --bootrom none --gamerom ./test-roms/${{ matrix.test_rom }} --start --noninteractive > output.log & pid=$!
          while ! awk -F"DEBUG SER: " '\''{if(NF>1) printf "%s", $2}'\'' output.log | grep -q "${{ matrix.pass_criteria }}"; do
              sleep 1
              if ! kill -0 $pid 2>/dev/null; then
              echo "Knowboy process ended unexpectedly."
              exit 1
              fi
          done
          echo "${{ matrix.success_message }}"
          kill $pid && exit 0
          ' || ( awk -F'DEBUG SER: ' '{if(NF>1) printf "%s", $2}' output.log; echo""; echo "Test output not detected within timeout period."; exit 1;)